let _originalSetTimeout=window.setTimeout,_originalClearTimeout=window.clearTimeout,_originalSetInterval=window.setInterval,_originalClearInterval=window.clearInterval,timersArray=[];const timersStartApp=(new Date).getTime();function _timerListInterval(e){return setInterval(()=>{_timersList()},e)}function _timersNow(){return(new Date).getTime()-timersStartApp}function _timersRemove(e){timersArray.forEach(t=>{t.id!==e||(t.del=!0)})}function _timersAdd(e,t,i){const r=_timersNow();timersArray[e.id]={type:t,id:e.id,delay:i[1],func:i[0].name?i[0].name:i[0].toString(),start:r,stop:r+i[1],active:""}}function _timersList(){const e=_timersNow(),t=timersArray.length;for(console.log("timersList (_timers.js) | Now: "+e),i=0;i<t;i++)(void 0===timersArray[i]||void 0===timersArray[i].delay||timersArray[i].del)&&timersArray.splice(i,1);let r;timersArray.forEach(t=>{r=Math.abs(e-t.stop),"timeout"===t.type?e>t.stop?(_timersRemove(t.id),t.active="‚ùå"):t.active="üïì "+Math.abs(r):t.active="üïì "+r%t.delay+" | ‚Ü∫ "+Math.ceil(r/t.delay)}),console.table(timersArray)}window.clearTimeout=function(e){_timersRemove(e.id),_originalClearTimeout(e)},window.setTimeout=function(){let e={id:_originalSetTimeout.apply(null,arguments)};return _timersAdd(e,"timeout",arguments),e},window.clearInterval=function(e){_timersRemove(e.id),_originalClearInterval(e)},window.setInterval=function(){let e={id:_originalSetInterval.apply(null,arguments)};return _timersAdd(e,"interval",arguments),e};